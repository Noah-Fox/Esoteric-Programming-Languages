-[[>>+<<-]>>-]  //go to ~cell 510

//fill left_stack with pairs of cells which determine letters 
<+<<<
<+<<<
<+++<++<<       //" "
<+++++++<++<+++++++++++<+<+++++++++++<+++++++++<<       //How
<++++++++++<+++++++++<+++++++++++<+++++++<+++++++++<+++++++++<++++++++++<++++<< //much
<+++++++++++<+++++++++<+++++++++++<+<+++++++++++<+<++++++++++<<<        //wood
<+++++++++++<+++++++++<+++++++++++<+<+++++++++++<+++++++<++++++++++<++++++++<++++++++++<<<      //would
<+++++++++<+++++++<<    //a
<+++++++++<+++++++++<++++++++++<++++<+++++++++++<+++++++<+++++++++<+++++++++<++++++++++<+++++++<<       //chuck
<++++<++++<<    //;
<+++++++<+++<++++++++++<++<<    //If
<+++++++++<+++++++++<+++++++++++<+<+++++++++++<+++++++<++++++++++<++++++++<++++++++++<<<        //could
<++++++<+++<<   //?
<++++++<+++++<< //A
<+++++++++<+++++++<++++++++++<++++++++<++++++++++<++++++++<<    //all
<+++++++++++<++++++<++++++++++<++++<++++++++++<+<<      //the
<++++++++++<++++<++++++++++<+<< //he
<++++<++++++<<  //:
<++++++++<<++++++++++<+<+++++++++++<++++++<++++++++++<+<+++++++++++<++++<<      //Peter
<++++++++<<++++++++++<+++++<+++++++++++<++<++++++++++<+<+++++++++++<++++<<      //Piper
<+++++++++++<++<++++++++++<+++++<+++++++++<+++++++++<++++++++++<+++++++<++++++++++<+<++++++++++<<<      //picked
<+++++++++++<++<++++++++++<+<+++++++++<+++++++++<++++++++++<+++++++<<   //peck
<+++++++++++<+<++++++++++<++<<  //of
<+++++++++++<++<++++++++++<+++++<+++++++++<+++++++++<++++++++++<+++++++<++++++++++<++++++++<++++++++++<+<++++++++++<<<  //pickled
<+++++++++++<++<++++++++++<+<+++++++++++<++<+++++++++++<++<++++++++++<+<+++++++++++<++++<+++++++++++<+++++<<    //peppers
<++++++++<+++++++<++++++++++<++++<++++++++++<+<+++++++++++<++++<++++++++++<+<+++<+++++++++<+++++++++++<+++++<<  //Where's
<++++++++<+++<++++++++++<++++<++++++++++<+<<    //She
<+++++++++++<+++++<++++++++++<+<++++++++++<++++++++<++++++++++<++++++++<+++++++++++<+++++<<     //sells
<+++++++++++<+++++<++++++++++<+<+++++++++<+++++++<<     //sea
<+++++++++<++++++++<++++++++++++<+<<    //by
<+++++++++++<+++++<++++++++++<++++<+++++++++++<+<+++++++++++<++++<++++++++++<+<<        //shore
<++++++++<++++<++++++++++<++++<++++++++++<+<<   //The
<+++++++++++<+++++<++++++++++<++++<++++++++++<+<++++++++++<++++++++<++++++++++<++++++++<+++++++++++<+++++<<     //shells
<+++++++++++<+++++<++++++++++<++++<++++++++++<+<<       //she
<+++++++++<+++++++<+++++++++++<++++<++++++++++<+<<      //are
<+++++++<+++<+++<+++++++++<++++++++++<+++++++++<<       //I'm
<+++++++++++<+++++<+++++++++++<+++++++<+++++++++++<++++<++++++++++<+<<  //sure
<++++++++<+++<+++++++++++<+<<   //So
<++++++++++<+++++<++++++++++<++<<       //if
<+++++++++++<+<+++++++++++<<<   //on
<++++++++<++++<++++++++++<++++<++++++++++<+<+++++++++++<<<      //Then

//move pairs of cells in left_stack into a 9_cell array containing each word 
>>>[[[<++++++++++>-]>>]>>]  //combine every cell pair into a char in the left cell (end on F)
(FA<<<<<)[      //while stack is not empty (A)
(AH>>>>>>>)>>>>>>>>>[>>>>>>>>>]+[<<<<<<<<<]       //add new element to word_array (end on H)
(HA<<<<<<<)
[               //while word in stack has not ended (A)
[(AG>>>>>>)+(GA<<<<<<)-]  //move A to G (end on A)
//move G to second empty cell in last element of word_array (end on G)
    (AG>>>>>>)[(AH>)>>>>>>>>>[>>>>>>>>>]<<<<<<<<<[<]<+>>[>]<[<<<<<<<<<](HG<)-]  
(GH>)>>>>>>>>>[>>>>>>>>>]<<<<<<<<<[<]<[>+<-]>[>]<[<<<<<<<<<]   //shift addition (end on H)
(HA<<<<<<<)<<+                     //increment first element of left_stack 
[[[>>+<<-]<<]<<]>>>>>>[[>>]>>]     //shift stack to the right 2 (end on E)
(EA<<<<)-                           //decrement first element of stack (end on A)
]
<<+                         //increment first element of stack 
[[[>>+<<-]<<]<<]>>>>>>[[>>]>>]  //shift stack to the right 2 (end on E)
(EA<<<<)-                   //decrement first element of stack (end on A)
]


//fill left_stack with information on which word to print 
(AG>>>>>>)

<+++<<++<
<++++<<++<
<+++++<<++<
<++++++<<++<
<+++++++<<++<
<+++++<<++++++++<<++<
<++++++++<<+++++++++<<+<<<+<++<
<+++++++<<++<
<+++++<<++++++++<<++<
<+<+<++<
<++++++++<<++<
<+++++<<++<+<+<<+++<+<++<
<+++++<<++++++++<<++<
<++++++<<++<
<++++++++<<++<
<++++<+<++<
<+++++<+<++<
<+++++<<++<
<++++++<+<++<
<+<+<++<
<++++++++<<+<<<+<++<
<+++++++<<++<
<+++++<<++++++++<<++<
<++++++<<++<
<++++++++<<++<
<+++++<<+++++++<+<+<<+<<++++++++<+<++<
<+++++++++<+<++<
<<++<++<
<+++++++<<++<
<+<++<++<
<++<++<++<
<+++<++<++<
<++++<++<+++++++<+<+<<+++<+<++<
<+<++<++<
<++<++<++<
<+++<++<++<
<++++<++<++<
<++++++++<+<++<
<+++++++++<+<++<
<<++<+++++++<+<+<<<+<++<
<++++++++<+<++<
<+++++++++<+<++<
<<++<++<
<+++++++<<++<
<+<++<++<
<++<++<++<
<+++<++<++<
<++++<++<+++++++++<<+<<+++++<++<++<
<+++++<+<++<
<+<++<++<
<++<++<++<
<+++<++<++<
<++++<++<++<
<++++++++<+<++<
<+++++++++<+<++<
<<++<++<+<+<<+<<++++++<++<++<
<+++++++<++<++<
<++++++++<++<++<+++<++<
<+++++++++<++<++<
<+++++<+<++<
<++++++++<++<<+++<+++++++++<<+<<+<+++<++<
<++<+++<++<
<+++<+++<++<
<+++++++<++<++<
<++++<+++<++<
<++++++++<++<++<+++<+++++++++<<++<
<+++++<+++<++<
<++++++<+++<+++++++<+<+<<+++++++<+++<++<
<++++++++<+++<++<
<+++<+++<++<
<+++++++<++<++<
<++++++++<++<++<+++<++<
<+++++++++<+++<++<
<+++++<+<++<
<++++++++<++<<+++<+++++++++<<+<<<++++<++<
<+++++<+++<++<
<++++++<+++<++<
<+++<+++<++<
<+++++++<++<++<
<++++++++<++<<+++<++<
<++<+++<+++++++<+<+<



//access each index in array put in stack and print 

[>++++++++++<-]>[>[>++++++++++<-]>]    //combine every cell pair to the right (end on H)

(HF<<)[  //while F 
    [(FH>>)+(HF<<)-]    //move F to H (end on F)
    (FH>>)
    //go to work cell of index *H 
        >>>>>>>>>[-]<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>
        [[>>>>>>>>>+<<<<<<<<<-]+>>>>>>>>>--]+
    <[.<]>[>]<[<<<<<<<<<]   //print element stack (end on H)
    (HD<<<<)[[>>+<<-]<<]>>>>[>>]   //shift stack (end on H)
    (HF<<)
]